
################################################################################################################
##                                         Parametros Generales                                               ##
################################################################################################################
#
# * server.port: Puerto po donde incia el servicio
###############
# * microservicio.path.pre  : Prefijo de la direccion url del servicio
##########################
# * microservicio.path.post : Continacion de la URL entre  microservicio.path.pre y microservicio.ambiente 
###########################
# * microservicio.ambiente  : Ambiente donde se despliega el servicio.
#
# des = Desarrollo
# qa = Calidad
# pro = Produccion
#  
# Cuando algun parametro empieza por des,cal o pro, solo se carga el valor de este parametro
# ejem:
# des.mq.hostName=172.15.51.6
# cal.mq.hostName=173.16.52.7
# pro.mq.hostName=174.17.53.8
#
# si el parametro microservicio.ambiente = des , entonces se carga el valor: des.mq.hostName=172.15.51.6
###########################
# * microservicio.medio: Lista de valores validos para el parametro origen , separados por "|"
#######################
################################################################################################################
################################################################################################################

server.port=7081
microservicio.path.pre = /api/
microservicio.ambiente = des
#sconfig.deskey = X#!g00aN430=?$|:.dAs


#### DESARROLLO ####
# des.seed.ruta  :  ruta donde se encuentra mi application.properties externo donde se encuentra el Key de encriptacion
#######################
des.seed.ruta =C:\\app\\microservicios\\logs\\application2.properties
#### CALIDAD ####
qa.seed.ruta =
#### PRODUCCION ####
pro.seed.ruta =



#### DESARROLLO ####
#des.db.user= C14405
#des.db.password= Cumana01*
#des.db.url= jdbc:postgresql://172.19.148.50:5432/Convenio1

####  CALIDAD   ####
#qa.db.user= 
#qa.db.password= 
#qa.db.url=

#### PRODUCCION ####
#pro.db.user= 
#pro.db.password=
#pro.db.url= 


#######CONEXION CON BD LOCALHOST#########
#DATASOURCE (POSTGRES 11.0)
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost/Convenio1
#spring.datasource.username=3LjUdTAltpnz6l2u2sBliDCmdiL7mZ2N
#spring.datasource.password=zbPKaDmLkwj+kPYhReegbCWBoefS


#######CONEXION CON BD BANCO#########
#DATASOURCE (POSTGRES 11.0)
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url= jdbc:postgresql://172.19.148.50:5432/Convenio1
#spring.datasource.username= 7+aTNWdivaxFBEDbFJ5e82iLplFKqA==
#spring.datasource.password= 76LKYDk249vwnlpD4Gzf6FD9bM7sxqkloQ==

################################################################################################################
##                                           Conexion Base de Datos                                           ##
################################################################################################################
#
# * db.initialSize: El número inicial de conexiones que se crean cuando se inicia el pool.
##################
# * db.testOnBorrow: La indicación de si los objetos se validarán antes de tomarlos prestados del pool. Si el objeto no se valida, se eliminará del grupo e intentaremos tomar prestado otro.
################
# * db.testOnReturn : La indicación de si los objetos se validarán antes de que se devuelvan al pool.
################
# * db.testWhileIdle:  La indicación de si los objetos serán validados por el desalojador de objetos inactivos (si corresponde). Si un objeto no se valida, se eliminará del pool.
####################
# * db.timeBetweenEvictionRunsMillis: Dicta con qué frecuencia buscamos conexiones inactivas, abandonadas y con qué frecuencia validamos la conexión inactiva y redimensionamos el pool inactivo
####################################
# * db.minIdle:  El número mínimo de conexiones que pueden permanecer inactivas en el pool, sin que se creen más conexiones, o cero para crear ninguna.
##############
# * db.maxActive: El número máximo de conexiones activas que se pueden asignar desde este pool al mismo tiempo
################
# * db.maxWaitMillis: El número máximo de milisegundos que esperará el grupo (cuando no hay conexiones disponibles) para que se devuelva una conexión antes de lanzar una excepción, o -1 para esperar indefinidamente.
##############
# * db.removeAbandonedOnBorrow: Indicadores para eliminar las conexiones abandonadas si superan el valor de removeAbandonedTimout.
##############################
# * db.removeAbandonedTimeout: Tiempo de espera en segundos antes de que se pueda eliminar una conexión abandonada.
#############################
# * db.logAbandoned : Marcar para registrar los seguimientos de la pila para el código de la aplicación que abandonó una declaración o conexión.
###################
# * db.minEvictableIdleTimeMillis: La cantidad mínima de tiempo que un objeto puede permanecer inactivo en la piscina antes de que sea elegible para el desalojo por parte del desalojador del objeto inactivo (si lo hubiera).
#################################
# * db.maxIdle: La cantidad máxima de conexiones que pueden permanecer inactivas en el pool, sin que se liberen otras adicionales, o negativas sin límite.
##############
# * db.defaultAutoCommit: El estado predeterminado de confirmación automática de las conexiones creadas por este pool. Si no se establece, no se llamará al método setAutoCommit.
#########################
# * db.validationQuery : The SQL query that will be used to validate connections from this pool 
# before returning them to the caller. If specified, this query MUST be an SQL SELECT statement 
# that returns at least one row. If not specified, Connection.isValid(int) will be used to validate connections.
######################
# * db.validationQueryTimeout: Sets the validation query timeout, the amount of time, in seconds, 
# that connection validation will wait for a response from the database when executing a validation query. 
# Use a value less than or equal to 0 for no timeout
##############################
# * [ambiente].db.user: Usuario de la conexion (encriptado)
######################
# * [ambiente].db.password: Clave del usuario (encriptado)
##########################
# * [ambiente].db.url: la URL utilizada para conectarse a la base de datos
######################
# spring.jackson.time-zone  :  para configurar la Local-zone para manejo correcto de fechas
############################
# spring.jackson.locale  :  para configurar la Local-zone para manejo correcto de fechas
#####################
################################################################################################################
################################################################################################################


#### DESARROLLO BD NEXO####
des.db.user= 6JXmVRIag7XPqShviaVuXwyQJpVEp48=
des.db.password= 6JXmVRIag9/vkdoF/1znHjKYeQgBli8Rug==
des.db.url= jdbc:sqlserver://172.19.148.174\\BD2:50002;databaseName=DIBS_BANCO_EXTERIOR;sendStringParametersAsUnicode=false


####  CALIDAD   ####
qa.db.user= 
qa.db.password= 
qa.db.url= 

#### PRODUCCION ####
pro.db.user= 
pro.db.password=
pro.db.url= 

db.driver = com.microsoft.sqlserver.jdbc.SQLServerDriver




## Pool
db.initialSize = 2
db.testOnBorrow = true
db.testOnReturn = true
db.testWhileIdle = true
db.timeBetweenEvictionRunsMillis = 60000
db.minIdle = 2
db.maxTotal = 5
db.maxIdle = 5
db.maxWaitMillis = 30000
db.removeAbandonedOnBorrow = true
db.removeAbandonedTimeout = 60
db.logAbandoned = false
db.minEvictableIdleTimeMillis = 10000
db.defaultAutoCommit = true
db.removeAbandonedOnMaintenance = true
db.validationQuery =SELECT 1;
db.validationQueryTimeout = 30000


#JPA
spring.jpa.hibernate.ddl-auto= none
#spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.open-in-view=true
spring.jpa.show-sql=false
#spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl





#### TIME-ZONE ####
# spring.jackson.time-zone  :  para configurar la Local-zone para manejo correcto de fechas
# spring.jackson.locale  :  para configurar la Local-zone para manejo correcto de fechas
#######################
spring.jackson.time-zone=America/Caracas
spring.jackson.locale=es_VE


################################################################################################################
##                                            Web Service Auditoria                                           ##
################################################################################################################
#
# * registrarAudit.ReadTimeout : Tiempo de espera de lectura
###############################
# * registrarAudit.ConnectTimeout: Tiempo de expera de conexion
#################################
# * registrarAudit.ConnectionRequestTimeout: Tiempo de espera de la conexion de la peticion
###########################################
# * [ambiente].registrarAudit.url : Direccion del web service de registro de auditoria
#################################
################################################################################################################
################################################################################################################

registrarAudit.ReadTimeout =10000
registrarAudit.ConnectTimeout= 10000
registrarAudit.ConnectionRequestTimeout =10000

#### DESARROLLO ####
des.registrarAudit.url = http://172.19.148.48:7003/microservices/des/registrar-auditoria
####  CALIDAD   ####
qa.registrarAudit.url = http://localhost:7003/microservices/qa/registrar-auditoria
#### PRODUCCION ####
pro.registrarAudit.url = http://localhost:7003/microservices/pro/registrar-auditoria


################################################################################################################
##                                          Mensajes de respuestas                                            ##
################################################################################################################

#### OK
res.0000 = Operacion Exitosa.
res.0001 = Operacion Exitosa.La consulta no arrojo resultado.

#### UNPROCESSABLE_ENTITY
res.1000 = Campo idSesion vacio , nulo o invalido
res.1001 = Campo idUsuario vacio , nulo o invalido
res.1002 = Campo codUsuario vacio , nulo o invalido
res.1003 = Campo Objeto comision vacio , nulo o invalido
res.1004 = Campo id vacio , nulo o invalido
res.1005 = Campo descripcion vacio , nulo o invalido
res.1006 = Campo usuario vacio , nulo o invalido
res.1007 = Campo monto vacio , nulo o invalido
res.1008 = Campo canal vacio , nulo o invalido

#### UNPROCESSABLE_ENTITY
res.1009 = Campo codMonedaOrigen vacio , nulo o invalido
res.1010 = Campo codMonedaDestino vacio , nulo o invalido

##BAD REQUEST
res.2000 = El id a Actualizar NO existe.
res.2001 = El id a Insertar YA existe.

##NotFound
res.2005 = Recurso solicitado no encontrado.

##### Internal Server Error.
res.6000 = Error General: @@Error
res.6001 = Error insertar / actualizar registro BD tabla Monedas @@Error
res.6002 = Error BD: @@Error




